{"version":3,"sources":["components/ShoppingListItem.js","components/ShoppingListControls.js","components/ShoppingList.js","index.js"],"names":["ShoppingListItem","props","id","onClick","itemChecked","className","checked","name","ShoppingListControls","useState","setName","addItem","type","placeholder","value","onChange","e","target","onKeyDown","key","clearItems","ShoppingList","localStorageKey","React","JSON","parse","localStorage","getItem","setValue","useEffect","setItem","stringify","useStateWithLocalStorage","items","setItems","console","log","updatedItems","map","item","length","nanoid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAUeA,MARf,SAA0BC,GACxB,OACE,oBAAIC,GAAID,EAAMC,GAAIC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMC,KAAKG,UAAWJ,EAAMK,QAAU,8CAAgD,oBAAzI,SACE,4BAAIL,EAAMM,UC0BDC,MA7Bf,SAA8BP,GAAQ,IAAD,EACXQ,mBAAS,IADE,mBAC5BF,EAD4B,KACtBG,EADsB,KAO7BC,EAAU,WACVJ,IACFN,EAAMU,QAAQJ,GACdG,EAAQ,MAOZ,OACE,sBAAKL,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,uBAAOO,KAAK,OAAOP,UAAU,qBAAqBH,GAAG,6BAA6BW,YAAY,yBAC5FC,MAAOP,EAAMQ,SAlBA,SAACC,GACpBN,EAAQM,EAAEC,OAAOH,QAiB0BI,UAAW,SAACF,GAAsB,UAAVA,EAAEG,KAAmBR,OACpF,wBAAQC,KAAK,SAASP,UAAU,sBAAsBF,QAASQ,EAA/D,oBAEF,wBAAQC,KAAK,SAASP,UAAU,sBAAsBF,QAXvC,WACjBF,EAAMmB,cAUJ,4BCyCSC,MAlDf,WAAyB,IAAD,EAZxB,SAAkCC,GAAkB,IAAD,EACvBC,IAAMd,SAC9Be,KAAKC,MAAMC,aAAaC,QAAQL,KAAqB,IAFN,mBAC1CR,EAD0C,KACnCc,EADmC,KASjD,OAJAL,IAAMM,WAAU,WACdH,aAAaI,QAAQR,EAAiBE,KAAKO,UAAUjB,MACpD,CAACQ,EAAiBR,IAEd,CAACA,EAAOc,GAIWI,CAAyB,sBAD7B,mBACfC,EADe,KACRC,EADQ,KAehB9B,EAAc,SAACF,GACnBiC,QAAQC,IAAI,iBAAmBlC,GAC/B,IAAMmC,EAAeJ,EAAMK,KAAI,SAAAC,GAC7B,OAAIrC,IAAOqC,EAAKrC,GACP,2BAAIqC,GAAX,IAAiBjC,SAAUiC,EAAKjC,UAE3BiC,KAETL,EAASG,IAGX,OACE,sBAAKhC,UAAU,eAAf,UACE,oBAAIA,UAAU,sBAAd,2BACE4B,EAAMO,OACJ,6BAEEP,EAAMK,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CACErC,GAAIqC,EAAKrC,GAETK,KAAMgC,EAAKhC,KACXD,QAASiC,EAAKjC,QACdF,YAAaA,GAHRmC,EAAKrC,SAQhB,mBAAGG,UAAU,qBAAb,8BAEJ,cAAC,EAAD,CAAsBM,QA1CV,SAACJ,GACf,IAAMgC,EAAO,CAAErC,GAAI,QAAUuC,cAAUlC,KAAMA,EAAMD,SAAS,GAC5D4B,EAAS,GAAD,mBAAKD,GAAL,CAAYM,KACpBJ,QAAQC,IAAI,cACZD,QAAQC,IAAIG,IAsC8BnB,WAnCzB,WACjBc,EAAS,IACTC,QAAQC,IAAI,wBCvBhBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.983012bb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ShoppingListItem(props) {\n  return (\n    <li id={props.id} onClick={() => props.itemChecked(props.id)} className={props.checked ? 'shoppinglist-item shoppinglist-item-checked' : 'shoppinglist-item'}>\n      <p>{props.name}</p>\n    </li>\n  );\n}\n\nexport default ShoppingListItem;\n","import React, {useState} from 'react';\n\nfunction ShoppingListControls(props) {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  }\n\n  const addItem = () => {\n    if (name) {\n      props.addItem(name);\n      setName(\"\");\n    }\n  }\n  const clearItems = () => {\n    props.clearItems();\n  }\n\n  return (\n    <div className='shoppinglist-controls'>\n      <div className='shoppinglist-additem'>\n        <input type='text' className='shoppinglist-input' id='shoppinglist-additem-input' placeholder='Your item name here...' \n          value={name} onChange={handleChange} onKeyDown={(e) => { if (e.key === 'Enter') { addItem() }}}/>\n        <button type='button' className='shoppinglist-button' onClick={addItem}>Add</button>\n      </div>\n      <button type='button' className='shoppinglist-button' onClick={clearItems}>Clear list</button>\n    </div>\n  );\n}\n\nexport default ShoppingListControls;\n","import React from 'react';\nimport { nanoid } from 'nanoid'\nimport ShoppingListItem from './ShoppingListItem';\nimport ShoppingListControls from './ShoppingListControls';\n\nfunction useStateWithLocalStorage(localStorageKey) {\n  const [value, setValue] = React.useState(\n    JSON.parse(localStorage.getItem(localStorageKey)) || []\n  );\n \n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value));\n  }, [localStorageKey, value]);\n \n  return [value, setValue];\n};\n\nfunction ShoppingList() {\n  const [items, setItems] = useStateWithLocalStorage('shoppinglist-items');\n\n  const addItem = (name) => {\n    const item = { id: 'item-' + nanoid(), name: name, checked: false }\n    setItems([...items, item]);\n    console.log(\"added item\");\n    console.log(item);\n  }\n\n  const clearItems = () => {\n    setItems([]);\n    console.log(\"cleared items\");\n  }\n\n  const itemChecked = (id) => {\n    console.log(\"checking item \" + id)\n    const updatedItems = items.map(item => {\n      if (id === item.id) {\n        return {...item, checked: !item.checked}\n      }\n      return item;\n    });\n    setItems(updatedItems);\n  }\n\n  return (\n    <div className=\"shoppinglist\">\n      <h1 className=\"shoppinglist-header\">Shopping List</h1>\n      { items.length ?\n          <ul>\n          {\n            items.map((item) => (\n              <ShoppingListItem\n                id={item.id}\n                key={item.id}\n                name={item.name}\n                checked={item.checked}\n                itemChecked={itemChecked}\n              />\n            ))\n          }\n          </ul>\n        : <p className=\"shoppinglist-empty\">List is empty...</p>\n      }\n      <ShoppingListControls addItem={addItem} clearItems={clearItems} />\n    </div>\n  );\n}\n\nexport default ShoppingList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport ShoppingList from './components/ShoppingList';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ShoppingList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}